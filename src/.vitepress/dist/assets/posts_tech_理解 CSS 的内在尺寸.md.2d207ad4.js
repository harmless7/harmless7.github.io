import{_ as n,c as e,o as s,d as t}from"./app.4b9a283d.js";const F=JSON.parse('{"title":"理解 CSS 的内在尺寸","description":"","frontmatter":{"title":"理解 CSS 的内在尺寸","icon":"css","isOriginal":true,"date":"2022-12-07T00:00:00.000Z","category":["学习笔记","技术"],"tag":["前端","css"],"image":"","banner":""},"headers":[{"level":2,"title":"理解什么是 内在尺寸","slug":"理解什么是-内在尺寸","link":"#理解什么是-内在尺寸","children":[]},{"level":2,"title":"min-content","slug":"min-content","link":"#min-content","children":[]},{"level":2,"title":"max-content","slug":"max-content","link":"#max-content","children":[]},{"level":2,"title":"fit-content","slug":"fit-content","link":"#fit-content","children":[]},{"level":2,"title":"使用案例","slug":"使用案例","link":"#使用案例","children":[{"level":3,"title":"1. 完全撑开又不越界的 wrapper","slug":"_1-完全撑开又不越界的-wrapper","link":"#_1-完全撑开又不越界的-wrapper","children":[]},{"level":3,"title":"2. 完美下划线","slug":"_2-完美下划线","link":"#_2-完美下划线","children":[]},{"level":3,"title":"3. fit-content()","slug":"_3-fit-content","link":"#_3-fit-content","children":[]}]}],"relativePath":"posts/tech/理解 CSS 的内在尺寸.md","lastUpdated":1678177559000}'),a={name:"posts/tech/理解 CSS 的内在尺寸.md"},o=t(`<p>学习自：<a href="https://juejin.cn/post/6844904065692909576" target="_blank" rel="noreferrer">(译) CSS min-content、max-content 和 fit-content 属性值介绍</a></p><p>彻底搞懂 <code>min-content</code>, <code>max-content</code>, <code>fit-content</code>。</p><h2 id="理解什么是-内在尺寸" tabindex="-1">理解什么是 <strong>内在尺寸</strong> <a class="header-anchor" href="#理解什么是-内在尺寸" aria-hidden="true">#</a></h2><p>有内在尺寸就有外在尺寸。</p><p>外在尺寸：用精确的值指定元素的尺寸。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">inline-size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20vw</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>内在尺寸：<strong>由元素内部的内容来动态地设定尺寸</strong>。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">inline-size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> min-content</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">block-size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> max-content</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>需要学习的内在尺寸属性有三个：<code>min-content</code>, <code>max-content</code>, <code>fit-content</code>。</p><h2 id="min-content" tabindex="-1">min-content <a class="header-anchor" href="#min-content" aria-hidden="true">#</a></h2><p>一言蔽之：<strong>元素尺寸 = 所有子元素尺寸中最大的</strong></p><p>以一张图来说明：</p><p><img src="https://s2.loli.net/2022/12/08/dMHXlDspyf1OmW8.jpg" alt="min-content"></p><h2 id="max-content" tabindex="-1">max-content <a class="header-anchor" href="#max-content" aria-hidden="true">#</a></h2><p>可以理解为子元素比较刚，强撑着父元素大小，不被更外层影响。</p><p><img src="https://s2.loli.net/2022/12/08/xWsTVEK8QrOplN6.jpg" alt="max-content"></p><h2 id="fit-content" tabindex="-1">fit-content <a class="header-anchor" href="#fit-content" aria-hidden="true">#</a></h2><p>重头戏，这个属性是 <code>min-content</code> 和 <code>max-content</code> 的结合。</p><blockquote><p><code>fit-content</code> 默许使用 <code>max-content</code>；</p><p>如果 可用空间 &lt; <code>max-content</code>，那就使用 可用空间；</p><p>如果 可用空间 &lt; <code>min-content</code>，那就使用 <code>min-content</code>。</p></blockquote><p><img src="https://s2.loli.net/2022/12/08/gewxOvzMuaXkV9c.gif" alt="fit-content"></p><h2 id="使用案例" tabindex="-1">使用案例 <a class="header-anchor" href="#使用案例" aria-hidden="true">#</a></h2><h3 id="_1-完全撑开又不越界的-wrapper" tabindex="-1">1. 完全撑开又不越界的 wrapper <a class="header-anchor" href="#_1-完全撑开又不越界的-wrapper" aria-hidden="true">#</a></h3><p>假如需要给一张不定大小的图片包一层 wrapper</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">wrapper</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">这是一段图片的说明文本</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>这时需要这层 wrapper 贴合图片大小，我们使用 <code>max-content</code>。</p><p><img src="https://s2.loli.net/2022/12/08/uTaOY2eIWio4yKG.jpg" alt="eg1:max-content"></p><p>但这样有一个隐患：当图片特别大，或者 wrapper 外层可视范围非常小时，就会出现滚动条。</p><p><img src="https://s2.loli.net/2022/12/08/Y72SHWaZRMuwQf5.jpg" alt="eg1:max-content弊端"></p><p>这时候使用 <code>fit-content</code> 刚好解决这个问题！</p><p>当外层比图片大，wrapper 会使用图片的大小（即 <code>max-content</code>）；</p><p>当外层比图片小，wrapper 会使用外层的大小（即 可用空间），直至到达 <code>min-content</code>；</p><p><img src="https://s2.loli.net/2022/12/08/vrR9Wuc7COBeDzs.jpg" alt="eg1:fit-content"></p><blockquote><p><strong>注意！</strong></p><p>这里需要把图片的宽度设置为 <code>width: 100%</code> 或 <code>max-width: 100%</code> ！</p><p>若不设置图片宽度为比例值，则图片是一个没有弹性的刚体（宽度定死），那么 <code>min-content</code> 的值也一直会等于图片宽度。</p><p>根据 <code>fit-content</code> 的原则，若 可用空间 小于 <code>min-content</code>，就使用后者。</p><p>那么图片和 wrapper 就始终不会缩小，依然会出现滚动条。</p></blockquote><h3 id="_2-完美下划线" tabindex="-1">2. 完美下划线 <a class="header-anchor" href="#_2-完美下划线" aria-hidden="true">#</a></h3><p><img src="https://s2.loli.net/2022/12/08/Je4jxOdHcfqgbB9.jpg" alt="eg2"></p><h3 id="_3-fit-content" tabindex="-1">3. fit-content() <a class="header-anchor" href="#_3-fit-content" aria-hidden="true">#</a></h3><p>这个函数只可以用在 <code>grad</code> 布局上，它可以在保留 <code>fit-content</code> 特征的同时，为其设定一个最大宽度。</p>`,37),p=[o];function l(c,r,i,d,h,D){return s(),e("div",null,p)}const g=n(a,[["render",l]]);export{F as __pageData,g as default};
