import{_ as s,c as a,o as n,d as l}from"./app.4b9a283d.js";const d=JSON.parse('{"title":"《现代Web布局》其六：子网格","description":"","frontmatter":{"title":"《现代Web布局》其六：子网格","icon":"css","isOriginal":true,"date":"2023-02-14T00:00:00.000Z","category":["读书笔记","前端"],"tag":["css","前端"],"image":"","banner":""},"headers":[{"level":2,"title":"兼容性注意","slug":"兼容性注意","link":"#兼容性注意","children":[]},{"level":2,"title":"参考内容","slug":"参考内容","link":"#参考内容","children":[]},{"level":2,"title":"嵌套网格的问题","slug":"嵌套网格的问题","link":"#嵌套网格的问题","children":[]},{"level":2,"title":"子网格（subgrid）概念","slug":"子网格-subgrid-概念","link":"#子网格-subgrid-概念","children":[]},{"level":2,"title":"意义党的拷问（我们为什么要用子网格）","slug":"意义党的拷问-我们为什么要用子网格","link":"#意义党的拷问-我们为什么要用子网格","children":[]},{"level":2,"title":"一些实例","slug":"一些实例","link":"#一些实例","children":[{"level":3,"title":"卡片组件布局","slug":"卡片组件布局","link":"#卡片组件布局","children":[]},{"level":3,"title":"品牌页（区）布局","slug":"品牌页-区-布局","link":"#品牌页-区-布局","children":[]},{"level":3,"title":"照片墙","slug":"照片墙","link":"#照片墙","children":[]},{"level":3,"title":"交叠布局 & 隐藏 hover","slug":"交叠布局-隐藏-hover","link":"#交叠布局-隐藏-hover","children":[]}]}],"relativePath":"posts/tech/《现代Web布局》其六：子网格.md","lastUpdated":1678177559000}'),p={name:"posts/tech/《现代Web布局》其六：子网格.md"},o=l(`<p>学一个目前没什么卵用的属性。</p><h2 id="兼容性注意" tabindex="-1">兼容性注意 <a class="header-anchor" href="#兼容性注意" aria-hidden="true">#</a></h2><p><img src="https://s2.loli.net/2023/02/14/21IoryRntdJjPTE.png" alt="兼容性"></p><p>2023-02-14，这个属性可兼容性还 <strong>低的可怜</strong>。了解一下就行，千万不要用于开发。</p><h2 id="参考内容" tabindex="-1">参考内容 <a class="header-anchor" href="#参考内容" aria-hidden="true">#</a></h2><p><a href="https://juejin.cn/book/7161370789680250917/section/7160657953932967967" target="_blank" rel="noreferrer">稀土掘金——网格布局中的子网格和嵌套网格</a></p><p><a href="https://juejin.cn/book/7161370789680250917/section/1908407916041614" target="_blank" rel="noreferrer">稀土掘金——使用子网格构建 Web 布局</a></p><p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Subgrid" target="_blank" rel="noreferrer">MDN——子网格</a></p><h2 id="嵌套网格的问题" tabindex="-1">嵌套网格的问题 <a class="header-anchor" href="#嵌套网格的问题" aria-hidden="true">#</a></h2><p><img src="https://s2.loli.net/2023/02/14/JOCav6XcBYjH39n.png" alt="嵌套网格"></p><p>如图所示，最大的问题在于嵌套网格，无法对齐外层网格线。</p><p>各个小网格各自为政，互不关联，造成样式错乱。</p><h2 id="子网格-subgrid-概念" tabindex="-1">子网格（<code>subgrid</code>）概念 <a class="header-anchor" href="#子网格-subgrid-概念" aria-hidden="true">#</a></h2><p><img src="https://s2.loli.net/2023/02/14/OkRpD3aCsTALg8d.png" alt="subgrid"></p><blockquote><ol><li>在 <code>grid-template-columns</code>、<code>grid-template-rows</code> 或者两者上都设置了 <code>subgrid</code> 的值</li><li>容器本身是 <code>grid</code> 或者 <code>inline-grid</code></li></ol><p>嵌套网格就会<strong>使用在父网格上定义的轨道</strong>，而不是创建一个新的轨道列表。</p></blockquote><h2 id="意义党的拷问-我们为什么要用子网格" tabindex="-1">意义党的拷问（我们为什么要用子网格） <a class="header-anchor" href="#意义党的拷问-我们为什么要用子网格" aria-hidden="true">#</a></h2><p>完全继承了父网格的轨道，意义何在？它解决了什么难以解决的问题吗？</p><p>直接使用父网格来排版有什么不好吗？或者干脆使用 <code>flex</code>？</p><p>我的理解是：</p><p>这么写从<strong>逻辑上来说更符合感觉</strong>。各个子网格看似独立，但又遵循统一约束。</p><h2 id="一些实例" tabindex="-1">一些实例 <a class="header-anchor" href="#一些实例" aria-hidden="true">#</a></h2><h3 id="卡片组件布局" tabindex="-1">卡片组件布局 <a class="header-anchor" href="#卡片组件布局" aria-hidden="true">#</a></h3><p><img src="https://s2.loli.net/2023/02/14/2PeKMqwB879CbRJ.jpg" alt="subgrid-card"></p><p>最典型的就是卡片布局。使用子网格可保证每张卡片结构一致。</p><p>如上图，子网格只在横轴上使用了 <code>subgrid</code>。在纵轴上依然设定了自己的 <code>grid-template-columns</code>。</p><p><img src="https://s2.loli.net/2023/02/14/1uGpMyFtfV72IqR.jpg" alt="另一种卡片"></p><p>再尝试一下竖向的卡片，同理。</p><p>ASCII 艺术方法依然很有用。</p><h3 id="品牌页-区-布局" tabindex="-1">品牌页（区）布局 <a class="header-anchor" href="#品牌页-区-布局" aria-hidden="true">#</a></h3><p><img src="https://s2.loli.net/2023/02/15/UGcFd5EJA38xmrp.png" alt="品牌区"></p><p>没啥好说的，属于网格布局的拿手好戏。</p><h3 id="照片墙" tabindex="-1">照片墙 <a class="header-anchor" href="#照片墙" aria-hidden="true">#</a></h3><p><img src="https://s2.loli.net/2023/02/15/AKVhi36EScXBHsq.png" alt="照片墙"></p><p>照片墙的搭建主要还是利用了前一节课的 <code>dense</code> 属性，忘记了记得去复习。</p><p>使用子网格有效地避免了，需要考虑外层情况带来的干扰。</p><h3 id="交叠布局-隐藏-hover" tabindex="-1">交叠布局 &amp; 隐藏 hover <a class="header-anchor" href="#交叠布局-隐藏-hover" aria-hidden="true">#</a></h3><p>交叠布局已经品鉴得够多了，这里主要学习一下 hover 效果，如下图：</p><p><img src="https://s2.loli.net/2023/02/16/ISboEr4kXlgVUHC.gif" alt="hover"></p><p>难点：</p><ol><li>图块或文字块 hover 时，两者<strong>一起变化</strong>。</li><li>不能粗暴的在外层添加 hover 事件，因为会在非卡片的空隙处触发。</li></ol><p>解决思路：</p><ol><li><p>建立一个空的 <code>&lt;a&gt;</code> 标签，填充满网格，使其覆盖于两方块上方，并取消其鼠标事件。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">a</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> inherit</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 继承 grid */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-area</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">-1</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">-1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 占满整个网格 */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> subgrid / subgrid</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 继承网格线 */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">z-index</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">pointer-events</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> none</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 去除鼠标事件 */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p>为 <code>&lt;a&gt;</code> 标签添加 <code>::after</code> 和 <code>::before</code> 伪元素，分别<strong>对齐覆盖</strong>于两张卡片之上。（意在使用伪元素来修改 <code>&lt;a&gt;</code> 标签的鼠标事件范围）</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">a</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">after</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">a</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">before</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> block</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* 恢复伪元素的 hover 事件 */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* 这样就保证了卡片外不触发 hover */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">pointer-events</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> auto</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">a</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">after</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-area</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 对齐左上角卡片 */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">a</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">before</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-area</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 对齐右下角卡片 */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p>给 <code>&lt;a&gt;</code> 标签绑定 hover 事件，并用 <code>~</code> 选择器修改卡片样式。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">a</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">hover</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">~</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">img-box</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* do something */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">a</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">hover</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">~</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">text-box</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* do something */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li></ol><p>题外：</p><p>我一开始很疑惑，为什不直接写成下面这样：</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 选中文本筐，修改两种筐 */</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">text-box</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">hover</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* do something */</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">text-box</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">hover</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">~</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">img-box</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* do something */</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 选中图片框，修改两种框 */</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">img-box</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">hover</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* do something */</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">img-box</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">hover</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">~</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">text-box</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* do something（实际上不能成功）*/</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>又是空标签，又是伪元素的，这不是脱了裤子放屁吗？</p><p>实践后我发现真不是，<strong>上例中最后一段代码是无法生效的</strong>。</p><p>因为 <code>~</code> 选择器 <em>不是选中所有兄弟节点</em>，而是选中 <em>该节点<strong>之后</strong>的兄弟节点！</em></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text-box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span><span style="color:#A6ACCD;"> // 前</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">img-box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span><span style="color:#A6ACCD;"> // 后</span></span>
<span class="line"></span></code></pre></div><p>因此 <code>.img-box ~ .text-box</code> 将找不到目标。</p>`,50),e=[o];function t(c,r,i,y,D,C){return n(),a("div",null,e)}const A=s(p,[["render",t]]);export{d as __pageData,A as default};
